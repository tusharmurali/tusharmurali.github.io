{
  "adversarial-minesweeper": "The board updates adversarially to punish guessing and ensure only logically safe moves are rewarded. This version of Minesweeper uses constraint satisfaction and backtracking to place mines only when consistent with all revealed information—so every mistake is your fault.",
  "anu-timetable": "All times are shown in the timezone of your device, and links to your timetable can be shared at will. The timetable supports selecting tutorials, workshops, and labs. It also has Google Maps links for directions to each location displayed. Notes can be stored for each activity by clicking on it in the calendar. Each upcoming activity is displayed below the calendar with the time until its commencement.",
  "better-genesis": "BetterGenesis is used by <strong>100+ students</strong> at my high school to track their grades with grade calculators and trend tracking. I facetiously named it BetterGenesis after the school's crude grade viewing system, Genesis. The backend consists of an Express web server with industry standard <strong>AES-256 encryption</strong> and <strong>JWT authentication</strong>, and the frontend is made in <a href=\"https://vuejs.org\" target=\"_blank\">Vue.js</a> with <a href=\"https://vuetifyjs.com/en/\" target=\"_blank\">Vuetify</a>.",
  "chess-memory": "Inspired by Human Benchmark's <a href=\"https://humanbenchmark.com/tests/memory\" target=\"_blank\">Visual Memory Test</a>, ChessMemory trains both visual memory and chess tactics at the same time. ChessMemory uses puzzles from the <a href=\"https://lichess.org\" target=\"_blank\">lichess.org</a> puzzle database. Featured on <a href=\"https://database.lichess.org/#related-projects\" target=\"_blank\">database.lichess.org</a>, the website garnered praise from <strong>GM Daniel Naroditsky</strong> and <strong>GM Boris Avrukh</strong>.",
  "cstimer-rp": "This program provides Discord Integration for the popular Rubik's Cube timer <a href=\"https://cstimer.net\">csTimer.net</a>. The program consists of <a href=\"https://jquery.com\" target=\"_blank\">jQuery</a> code which runs through a Chrome extension and a Python program that uses <a href=\"https://discordpy.readthedocs.io/en/stable/\" target=\"_blank\">discord.py</a>. Updating every 5 seconds, the program shows the average of the user's past 5 and 12 solve times as well as the event and scramble type.",
  "cublino": "The strategy game has a <strong>minimax AI opponent</strong> using <strong>alpha-beta pruning</strong>. I developed the app with a team of 3, amassing <strong>348 commits</strong> and <strong>64 JUnit tests</strong> in <strong>GitHub CI/CD</strong>.",
  "digit-classifier": "This is a simple PyTorch implementation of a neural network for recognizing black-and-white images of handwritten digits using the MNIST dataset. The model achieves an accuracy of 98.44% on the test set. The model runs in the browser via ONNX.js. The UI code was adapted from <a href=\"https://github.com/elliotwaite\" target=\"_blank\">Elliot Waite</a>.",
  "Melat-8®": "Melat-8 is a website I build as an intern for <a href=\"https://www.pharmvista.com\" target=\"_blank\">Pharmvista</a>. The site features their line of organic melatonin gummies in a theme similar to the <a href=\"https://apple.com\" target=\"_blank\">Apple</a> website. I built this project using <a href=\"https://getbootstrap.com\">Bootstrap</a> and a healthy dose of teamwork, communication, and meeting deadlines.",
  "overleaf-dark-mode": "Used by <strong>6,000+ users</strong> on the <a href=\"https://chromewebstore.google.com/detail/ppkjalpibdaiahjefbapemimobpkpond\" target=\"_blank\">Chrome Web Store</a>, The extension inverts colours in the editor, PDF viewer, and modals, and adds a dark background to most content panes and integrates the <strong>Chrome Storage API</strong> to persist user preferences across sessions",
  "rhythm": "Rhythm was one of my first ventures into Java. Notes fall in time to each track, and the player must tap the corresponding keys. I used the AWT for visuals and JLayer for audio.<div align=\"center\"><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/OSIjwNaCi-o?si=heOCM58drOLJI3qj\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe></div>",
  "seam-carving": "It uses an energy function and dynamic programming to intelligently remove low-importance pixel seams. This allows images to be resized while preserving key features, avoiding distortion or cropping.",
  "sentiment-analysis": "This <strong>real-time NLP model</strong> is built with PyTorch and trained on a dataset of <strong>Amazon product reviews</strong>. The model predicts sentiment on a scale from -1 (completely negative) to 1 (completely positive). The model achieves <strong>96.47% accuracy</strong> using <strong>token embeddings</strong> and <strong>mini-batch gradient descent</strong> optimization. The dataset used is the <a href=\"https://www.kaggle.com/datasets/pradeeshprabhakar/preprocessed-dataset-sentiment-analysis\" target=\"_blank\">Preprocessed Dataset for Sentiment Analysis</a> from <a href=\"https://kaggle.com\" target=\"_blank\">Kaggle</a>.",
  "streamforge": "Built on <strong>Google Cloud Platform (GCP)</strong> services such as Cloud Storage, Pub/Sub, Cloud Run, Firestore, and Firebase Auth, it supports video uploads, <strong>FFmpeg-based transcoding</strong>, and adaptive playback. The system features a <strong>Next.js</strong> frontend and distributed processing pipelines using <strong>Pub/Sub workers</strong> to handle asynchronous jobs and real-time updates efficiently. It includes secure, production-grade authentication and <strong>multi-tenant user management</strong> with session persistence. Performance and cost efficiency were optimized by containerizing services with Docker, deploying via Cloud Run, and employing an <strong>event-driven architecture</strong> for dynamic scalability.",
  "trumpgpt": "It consists of a <strong>transformer-based model</strong> (similar to <strong>GPT</strong>) trained on Donald Trump's tweets. The model architecture consists of <strong>multi-head self-attention</strong> layers, <strong>transformer blocks</strong>, and <strong>token embeddings</strong>. The dataset used is the <a href=\"https://www.kaggle.com/datasets/kingburrito666/better-donald-trump-tweets/data\" target=\"_blank\">(Better) - Donald Trump Tweets!</a> from <a href=\"https://kaggle.com\" target=\"_blank\">Kaggle</a>.",
  "universal-ranks": "UniversalRanks is a system that ranks all-round chess ability by averaging a player's rating across classical, rapid, and blitz formats—each normalized as a percentage of the highest rating in that format. Inspired by KinchRanks (used in speedcubing), it rewards rating gains even without changes in rank and emphasizes progress at the top level. Ratings are sourced live from <a href=\"https://2700chess.com\" target=\"_blank\">2700chess.com</a> and exclude inactive classical players.",
  "wordle-ai": "The AI can guess the WORDLE in an <strong>average of 3.42 turns</strong>, which was shown by <a href=\"http://sonorouschocolate.com/notes/index.php?title=The_best_strategies_for_Wordle\" target=\"_blank\">Alex Selby</a> to be <strong>theoretically optimal</strong>. The AI tries first to maximize the number of unique tile colorings that can be given for a guess, and second to minimize the variance of the number of possibilities that could remain after making the guess.",
  "zpordle-ai": "If \\(d\\) is the \\(p\\)-adic distance after guessing a number \\(g\\), the AI guesses the smallest number of the remaining possibilities that is of the form \\(g + k/d\\) for some integer \\(k\\) such that \\(p\\) does not divide \\(k\\)."
}
